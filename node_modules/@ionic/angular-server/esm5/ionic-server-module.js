import * as tslib_1 from "tslib";
import { DOCUMENT } from '@angular/common';
import { APP_ID, NgModule } from '@angular/core';
import { BEFORE_APP_SERIALIZED } from '@angular/platform-server';
import { hydrateDocument } from '@ionic/core/hydrate';
// @dynamic
var IonicServerModule = /** @class */ (function () {
    function IonicServerModule() {
    }
    IonicServerModule = tslib_1.__decorate([
        NgModule({
            providers: [
                {
                    provide: BEFORE_APP_SERIALIZED,
                    useFactory: hydrateIonicComponents,
                    multi: true,
                    deps: [DOCUMENT, APP_ID]
                }
            ]
        })
    ], IonicServerModule);
    return IonicServerModule;
}());
export { IonicServerModule };
// @dynamic
// tslint:disable-next-line: only-arrow-functions
export function hydrateIonicComponents(doc, appId) {
    return function () {
        return hydrateDocument(doc, {
            clientHydrateAnnotations: false,
            excludeComponents: [
                // overlays
                'ion-action-sheet',
                'ion-alert',
                'ion-loading',
                'ion-modal',
                'ion-picker',
                'ion-popover',
                'ion-toast',
                'ion-toast',
                // navigation
                'ion-router',
                'ion-route',
                'ion-route-redirect',
                'ion-router-link',
                'ion-router-outlet',
                // tabs
                'ion-tabs',
                'ion-tab',
                // auxiliar
                'ion-picker-column',
                'ion-virtual-scroll'
            ]
        })
            .then(function (hydrateResults) {
            hydrateResults.diagnostics.forEach(function (d) {
                if (d.type === 'error') {
                    console.error(d.messageText);
                }
                else if (d.type === 'debug') {
                    console.debug(d.messageText);
                }
                else {
                    console.log(d.messageText);
                }
            });
            if (doc.head != null) {
                var styleElms = doc.head.querySelectorAll('style[data-styles]');
                for (var i = 0; i < styleElms.length; i++) {
                    styleElms[i].setAttribute('ng-transition', appId);
                }
            }
            if (doc.body != null) {
                var ionPages = doc.body.querySelectorAll('.ion-page.ion-page-invisible');
                for (var i = 0; i < ionPages.length; i++) {
                    ionPages[i].classList.remove('ion-page-invisible');
                }
            }
        });
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW9uaWMtc2VydmVyLW1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bpb25pYy9hbmd1bGFyLXNlcnZlci8iLCJzb3VyY2VzIjpbImlvbmljLXNlcnZlci1tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdEQsV0FBVztBQVdYO0lBQUE7SUFBZ0MsQ0FBQztJQUFwQixpQkFBaUI7UUFWN0IsUUFBUSxDQUFDO1lBQ1IsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxxQkFBcUI7b0JBQzlCLFVBQVUsRUFBRSxzQkFBc0I7b0JBQ2xDLEtBQUssRUFBRSxJQUFJO29CQUNYLElBQUksRUFBRSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUM7aUJBQ3pCO2FBQ0Y7U0FDRixDQUFDO09BQ1csaUJBQWlCLENBQUc7SUFBRCx3QkFBQztDQUFBLEFBQWpDLElBQWlDO1NBQXBCLGlCQUFpQjtBQUU5QixXQUFXO0FBQ1gsaURBQWlEO0FBQ2pELE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxHQUFRLEVBQUUsS0FBVTtJQUN6RCxPQUFPO1FBQ0wsT0FBTyxlQUFlLENBQUMsR0FBRyxFQUFFO1lBQzFCLHdCQUF3QixFQUFFLEtBQUs7WUFDL0IsaUJBQWlCLEVBQUU7Z0JBQ2pCLFdBQVc7Z0JBQ1gsa0JBQWtCO2dCQUNsQixXQUFXO2dCQUNYLGFBQWE7Z0JBQ2IsV0FBVztnQkFDWCxZQUFZO2dCQUNaLGFBQWE7Z0JBQ2IsV0FBVztnQkFDWCxXQUFXO2dCQUVYLGFBQWE7Z0JBQ2IsWUFBWTtnQkFDWixXQUFXO2dCQUNYLG9CQUFvQjtnQkFDcEIsaUJBQWlCO2dCQUNqQixtQkFBbUI7Z0JBRW5CLE9BQU87Z0JBQ1AsVUFBVTtnQkFDVixTQUFTO2dCQUVULFdBQVc7Z0JBQ1gsbUJBQW1CO2dCQUNuQixvQkFBb0I7YUFDckI7U0FDRixDQUFDO2FBQ0QsSUFBSSxDQUFDLFVBQUEsY0FBYztZQUNsQixjQUFjLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFBLENBQUM7Z0JBQ2xDLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxPQUFPLEVBQUU7b0JBQ3RCLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDO2lCQUM5QjtxQkFBTSxJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUssT0FBTyxFQUFFO29CQUM3QixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQztpQkFDOUI7cUJBQU07b0JBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUM7aUJBQzVCO1lBQ0gsQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxFQUFFO2dCQUNwQixJQUFNLFNBQVMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLG9CQUFvQixDQUFpQyxDQUFDO2dCQUNsRyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDekMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxlQUFlLEVBQUUsS0FBSyxDQUFDLENBQUM7aUJBQ25EO2FBQ0Y7WUFFRCxJQUFJLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxFQUFFO2dCQUNwQixJQUFNLFFBQVEsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLDhCQUE4QixDQUE0QixDQUFDO2dCQUN0RyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDeEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQztpQkFDcEQ7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEFQUF9JRCwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJFRk9SRV9BUFBfU0VSSUFMSVpFRCB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLXNlcnZlcic7XG5pbXBvcnQgeyBoeWRyYXRlRG9jdW1lbnQgfSBmcm9tICdAaW9uaWMvY29yZS9oeWRyYXRlJztcblxuLy8gQGR5bmFtaWNcbkBOZ01vZHVsZSh7XG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEJFRk9SRV9BUFBfU0VSSUFMSVpFRCxcbiAgICAgIHVzZUZhY3Rvcnk6IGh5ZHJhdGVJb25pY0NvbXBvbmVudHMsXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgIGRlcHM6IFtET0NVTUVOVCwgQVBQX0lEXVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBJb25pY1NlcnZlck1vZHVsZSB7fVxuXG4vLyBAZHluYW1pY1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBvbmx5LWFycm93LWZ1bmN0aW9uc1xuZXhwb3J0IGZ1bmN0aW9uIGh5ZHJhdGVJb25pY0NvbXBvbmVudHMoZG9jOiBhbnksIGFwcElkOiBhbnkpIHtcbiAgcmV0dXJuICgpID0+IHtcbiAgICByZXR1cm4gaHlkcmF0ZURvY3VtZW50KGRvYywge1xuICAgICAgY2xpZW50SHlkcmF0ZUFubm90YXRpb25zOiBmYWxzZSxcbiAgICAgIGV4Y2x1ZGVDb21wb25lbnRzOiBbXG4gICAgICAgIC8vIG92ZXJsYXlzXG4gICAgICAgICdpb24tYWN0aW9uLXNoZWV0JyxcbiAgICAgICAgJ2lvbi1hbGVydCcsXG4gICAgICAgICdpb24tbG9hZGluZycsXG4gICAgICAgICdpb24tbW9kYWwnLFxuICAgICAgICAnaW9uLXBpY2tlcicsXG4gICAgICAgICdpb24tcG9wb3ZlcicsXG4gICAgICAgICdpb24tdG9hc3QnLFxuICAgICAgICAnaW9uLXRvYXN0JyxcblxuICAgICAgICAvLyBuYXZpZ2F0aW9uXG4gICAgICAgICdpb24tcm91dGVyJyxcbiAgICAgICAgJ2lvbi1yb3V0ZScsXG4gICAgICAgICdpb24tcm91dGUtcmVkaXJlY3QnLFxuICAgICAgICAnaW9uLXJvdXRlci1saW5rJyxcbiAgICAgICAgJ2lvbi1yb3V0ZXItb3V0bGV0JyxcblxuICAgICAgICAvLyB0YWJzXG4gICAgICAgICdpb24tdGFicycsXG4gICAgICAgICdpb24tdGFiJyxcblxuICAgICAgICAvLyBhdXhpbGlhclxuICAgICAgICAnaW9uLXBpY2tlci1jb2x1bW4nLFxuICAgICAgICAnaW9uLXZpcnR1YWwtc2Nyb2xsJ1xuICAgICAgXVxuICAgIH0pXG4gICAgLnRoZW4oaHlkcmF0ZVJlc3VsdHMgPT4ge1xuICAgICAgaHlkcmF0ZVJlc3VsdHMuZGlhZ25vc3RpY3MuZm9yRWFjaChkID0+IHtcbiAgICAgICAgaWYgKGQudHlwZSA9PT0gJ2Vycm9yJykge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZC5tZXNzYWdlVGV4dCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZC50eXBlID09PSAnZGVidWcnKSB7XG4gICAgICAgICAgY29uc29sZS5kZWJ1ZyhkLm1lc3NhZ2VUZXh0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhkLm1lc3NhZ2VUZXh0KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChkb2MuaGVhZCAhPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlRWxtcyA9IGRvYy5oZWFkLnF1ZXJ5U2VsZWN0b3JBbGwoJ3N0eWxlW2RhdGEtc3R5bGVzXScpIGFzIE5vZGVMaXN0T2Y8SFRNTFN0eWxlRWxlbWVudD47XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3R5bGVFbG1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgc3R5bGVFbG1zW2ldLnNldEF0dHJpYnV0ZSgnbmctdHJhbnNpdGlvbicsIGFwcElkKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZG9jLmJvZHkgIT0gbnVsbCkge1xuICAgICAgICBjb25zdCBpb25QYWdlcyA9IGRvYy5ib2R5LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pb24tcGFnZS5pb24tcGFnZS1pbnZpc2libGUnKSBhcyBOb2RlTGlzdE9mPEhUTUxFbGVtZW50PjtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpb25QYWdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlvblBhZ2VzW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ2lvbi1wYWdlLWludmlzaWJsZScpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59XG4iXX0=