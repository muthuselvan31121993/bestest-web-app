{"version":3,"file":"express-engine.js","sources":["../../../../../../modules/common/engine/src/interfaces.ts","../../../../../../modules/common/engine/src/file-loader.ts","../../../../../../modules/common/engine/src/engine.ts","../../../../../../modules/express-engine/src/main.ts","../../../../../../modules/express-engine/express-engine.ts"],"names":["fs.readFile","fs.readFileSync","RenderOptions"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModuleFactory, StaticProvider, Type } from '@angular/core';\n\n/** These are the allowed options for the render */\nexport interface RenderOptions {\n  bootstrap: Type<{}> | NgModuleFactory<{}>;\n  providers?: StaticProvider[];\n  url?: string;\n  document?: string;\n  documentFilePath?: string;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport * as fs from 'fs';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException | null, data: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(data.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport { Compiler, CompilerFactory, NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { INITIAL_CONFIG, platformDynamicServer, renderModuleFactory } from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport { FileLoader } from './file-loader';\nimport { RenderOptions } from './interfaces';\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory?: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n    const factory = await this.getFactory(moduleOrFactory);\n\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  async getFactory(moduleOrFactory: Type<{}> | NgModuleFactory<{}>): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return moduleOrFactory;\n    } else {\n      // we're in JIT mode\n      const moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return moduleFactory;\n      }\n\n      // Compile the module and cache it\n      const factory = await this.getCompiler().compileModuleAsync(moduleOrFactory);\n      this.factoryCacheMap.set(moduleOrFactory, factory);\n\n      return factory;\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Request, Response } from 'express';\nimport * as fs from 'fs';\n\nimport { NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { ɵCommonEngine as CommonEngine } from '@nguniversal/common/engine';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\n/**\n * These are the allowed options for the engine\n */\nexport interface NgSetupOptions {\n  bootstrap: Type<{}> | NgModuleFactory<{}>;\n  providers?: StaticProvider[];\n}\n\n/**\n * These are the allowed options for the render\n */\nexport interface RenderOptions extends NgSetupOptions {\n  req: Request;\n  res?: Response;\n  url?: string;\n  document?: string;\n}\n\n/**\n * This holds a cached version of each index used.\n */\nconst templateCache: { [key: string]: string } = {};\n\n/**\n * This is an express engine for handling Angular Applications\n */\nexport function ngExpressEngine(setupOptions: Readonly<NgSetupOptions>) {\n  const engine = new CommonEngine(setupOptions.bootstrap, setupOptions.providers);\n\n  return function (filePath: string,\n                   options: Readonly<RenderOptions>,\n                   callback: (err?: Error | null, html?: string) => void) {\n    try {\n      if (!setupOptions.bootstrap && !options.bootstrap) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      const req = options.req;\n\n      const renderOptions: RenderOptions = Object.assign({}, options);\n\n      renderOptions.url =\n        options.url || `${req.protocol}://${(req.get('host') || '')}${req.originalUrl}`;\n      renderOptions.document = options.document || getDocument(filePath);\n\n      renderOptions.providers = options.providers || [];\n      renderOptions.providers =\n        renderOptions.providers.concat(getReqResProviders(options.req, options.res));\n\n      engine.render(renderOptions)\n        .then(html => callback(null, html))\n        .catch(callback);\n    } catch (err) {\n      callback(err);\n    }\n  };\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(req: Request, res?: Response): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: REQUEST,\n      useValue: req\n    }\n  ];\n  if (res) {\n    providers.push({\n      provide: RESPONSE,\n      useValue: res\n    });\n  }\n\n  return providers;\n}\n\n/**\n * Get the document at the file path\n */\nfunction getDocument(filePath: string): string {\n  return templateCache[filePath] = templateCache[filePath] || fs.readFileSync(filePath).toString();\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}